apiVersion: v1
kind: Namespace
metadata:
  name: calendar-sync
---
apiVersion: v1
kind: Secret
metadata:
  name: google-credentials
  namespace: calendar-sync
type: Opaque
data:
  # Base64 encode your credentials.json file and paste here
  # Example: cat credentials.json | base64 | tr -d '\n'
  credentials.json: <BASE64_ENCODED_CREDENTIALS>
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: calendar-sync-data
  namespace: calendar-sync
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calendar-sync
  namespace: calendar-sync
  labels:
    app: calendar-sync
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: calendar-sync
  template:
    metadata:
      labels:
        app: calendar-sync
    spec:
      containers:
      - name: calendar-sync
        # Replace YOUR_GITHUB_USERNAME with your actual GitHub username
        image: ghcr.io/YOUR_GITHUB_USERNAME/work-calendar-sync:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SECRET_KEY
          value: "change-this-to-a-random-secret-key"
        # APP_BASE_DIR defaults to /app in the container, which is correct
        volumeMounts:
        - name: credentials
          mountPath: /app/secrets
          readOnly: true
        - name: data
          mountPath: /app/data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: credentials
        secret:
          secretName: google-credentials
      - name: data
        persistentVolumeClaim:
          claimName: calendar-sync-data
---
apiVersion: v1
kind: Service
metadata:
  name: calendar-sync
  namespace: calendar-sync
spec:
  selector:
    app: calendar-sync
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: calendar-sync
  namespace: calendar-sync
  annotations:
    # Uncomment and modify based on your ingress controller
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  rules:
  - host: calendar-sync.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: calendar-sync
            port:
              number: 80
  # Uncomment for TLS
  # tls:
  # - hosts:
  #   - calendar-sync.yourdomain.com
  #   secretName: calendar-sync-tls
